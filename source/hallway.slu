sub hallway ()
{
    startMusic ('data/bu-a-lively-cheese.it', 0, 0);

    messBusy ();
    setZBuffer ('data/hallway.zbu');
    setFloor ('data/hallway3.flo');
    addOverlay ('data/hallway1.png', 0, 0);
    
    if (previousRoom == cellRoom)
    {
        addCharacter (guard, 120, 60, guardAnim() );
        addCharacter (ego, 160, 60, egoShapeAnim() );
    }
    if (previousRoom == securityRoom)
    {
        addCharacter (ego, 100, 45, egoShapeAnim() );
    }
    if (previousRoom == labRoom)
    {
        addCharacter (ego, 62, 46, egoShapeAnim() );
    }
    if (previousRoom == storeRoom)
    {
        addCharacter (ego, 23, 46, egoShapeAnim() );
    }
    
    addScreenRegion (securityCameras, 0, 0, 145, 23, 0, 0, NORTH);
    addScreenRegion (storeRoomDoor, 17, 30, 29, 47, 23, 46, NORTH);
    addScreenRegion (labRoomDoor, 56, 30, 68, 47, 62, 46, NORTH);
    addScreenRegion (securityRoomDoor, 94, 30, 105, 47, 100, 46, NORTH);
    addScreenRegion (exitExit, 0, 47, 7, 67, 1, 57, NORTH);
    
    messShowInventory ();
    messShow ();

    if (previousRoom == cellRoom)
    {
        moveCharacter (guard, 99, 60);
        moveCharacter (guard, 99, 46);
        pause (4);
        removeCharacter (guard);

        moveCharacter (ego, 90, 60);
        turnCharacter (ego, EAST);
        pause (20);
        turnCharacter (ego, WEST);
        pause (20);
        think (ego, "That was close! But I am not out yet...");
    }
    if (previousRoom == securityRoom)
    {
        moveCharacter (ego, 100, 56);
        turnCharacter (ego, WEST);
    }
    if (previousRoom == labRoom)
    {
        moveCharacter (ego, 62, 56);
        turnCharacter (ego, EAST);
    }
    if (previousRoom == storeRoom)
    {
        moveCharacter (ego, 23, 56);
        turnCharacter (ego, EAST);
    }
    
    messResume ();
}

objectType exitExit ("Exit")
{
    event default
    {
        if (egoHasKey == FALSE)
        {
            think (ego, "The exit door is locked. I need the key.");
            return;
        }
        
        moveCharacter (ego, 16, 57);
        turnCharacter (ego, WEST);
        egoShiftToMonster ();
        say (ego, "Freedom!");
        moveCharacter (ego, 0, 57);
        messWarp (exitRoom);
    }
}

objectType securityCameras ("Security Cameras")
{
    event lookAt
    {
        think (ego, "I can't shape shift while they are watching.");
    }
}

objectType labRoomDoor ("Lab")
{
    event default
    {
        moveCharacter (ego, labRoomDoor);
        messWarp (labRoom);
    }
}

objectType securityRoomDoor ("Security")
{
    event default
    {
        if (egoShape == "SCIENTIST")
        {
            think (ego, "Not looking like this, it will be suspicious!");
            return;
        }
        moveCharacter (ego, securityRoomDoor);
        messWarp (securityRoom);
    }
}

objectType storeRoomDoor ("Storage")
{
    event default
    {
        moveCharacter (ego, storeRoomDoor);
        messWarp (storeRoom);
    }
}
